buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
  dependencies {
    classpath "com.badlogicgames.gdx:gdx-tools:$gdxVersion"
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
  }
}

subprojects {
  apply plugin: 'kotlin'
  sourceCompatibility = 1.8

  kotlin {
    experimental {
      coroutines 'enable'
    }
  }
}

subprojects {
  version = '0.1'
  ext.appName = 'bialjam17'
  repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }
  }
}

import com.badlogic.gdx.tools.texturepacker.TexturePacker
task pack << {
  render('./raw', 100)
  TexturePacker.process(
    'atlas',         // Raw assets path.
    'assets',        // Output directory.
    'skin'           // Name of the generated atlas (without extension).
  )
}

def render(String dirName, size) {
  def root = file(dirName)
  root.listFiles().each {
    def name = it.name.split("\\.")[0]
    runProcess(root, "inkscape -z -w $size -h $size -e ../atlas/${name}.png ${name}.svg")   //if using linux uncommen this
//    runProcess(root, "/Applications/Inkscape.app/Contents/Resources/bin/inkscape -z -w $size -h $size -e ../atlas/${name}.png ${name}.svg")
  }
}

def runProcess(dir, String commands) {
  println commands
  def builder = new ProcessBuilder(commands.split(' '))
  builder.inheritIO()
  builder.directory(dir)
  builder.start().waitFor()
}
